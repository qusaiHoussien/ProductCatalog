// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ProductCatalog.Server.Data;

#nullable disable

namespace ProductCatalog.Server.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("ProductCatalog.Shared.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "this category have all electronic devices",
                            Name = "electronic"
                        },
                        new
                        {
                            Id = 2,
                            Description = "this category have all descktop devices",
                            Name = "computers"
                        },
                        new
                        {
                            Id = 3,
                            Description = "this category have all laptops devices",
                            Name = "laptops"
                        },
                        new
                        {
                            Id = 4,
                            Description = "this category have all mobiles devices",
                            Name = "mobiles"
                        });
                });

            modelBuilder.Entity("ProductCatalog.Shared.Picture", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Alt")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImgUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.ToTable("Pictures");
                });

            modelBuilder.Entity("ProductCatalog.Shared.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("Price")
                        .HasColumnType("real");

                    b.Property<string>("forSearchByCategory")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "new laptop for engineer",
                            Name = "Asus laptop",
                            Price = 0f,
                            forSearchByCategory = ".1.3"
                        },
                        new
                        {
                            Id = 2,
                            Description = "new computer from asus",
                            Name = "Asus computer",
                            Price = 0f,
                            forSearchByCategory = ".1.2"
                        });
                });

            modelBuilder.Entity("ProductCatalog.Shared.ProductAttribute", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Product_Attributes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "this attribute descripte ram memory in computers and mobile and ...",
                            Name = "ram"
                        },
                        new
                        {
                            Id = 2,
                            Description = "this attribute descripte processor  in computers and mobile and ...",
                            Name = "processor"
                        },
                        new
                        {
                            Id = 3,
                            Description = "this attribute descripte hard memory in computers and mobile and ...",
                            Name = "hard"
                        });
                });

            modelBuilder.Entity("ProductCatalog.Shared.ProductAttributeMapping", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("AttributeId")
                        .HasColumnType("int");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AttributeId");

                    b.HasIndex("ProductId");

                    b.ToTable("Product_Attribute_Mapping");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AttributeId = 1,
                            ProductId = 1,
                            Value = "4 GB"
                        },
                        new
                        {
                            Id = 2,
                            AttributeId = 2,
                            ProductId = 1,
                            Value = "intel core i3"
                        },
                        new
                        {
                            Id = 3,
                            AttributeId = 1,
                            ProductId = 2,
                            Value = "4 GB"
                        },
                        new
                        {
                            Id = 4,
                            AttributeId = 2,
                            ProductId = 2,
                            Value = "intel core i7"
                        });
                });

            modelBuilder.Entity("ProductCatalog.Shared.ProductCategoryMapping", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("ProductId");

                    b.ToTable("Product_Category_Mapping");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryId = 1,
                            ProductId = 1
                        },
                        new
                        {
                            Id = 2,
                            CategoryId = 3,
                            ProductId = 1
                        },
                        new
                        {
                            Id = 3,
                            CategoryId = 1,
                            ProductId = 2
                        },
                        new
                        {
                            Id = 4,
                            CategoryId = 2,
                            ProductId = 2
                        });
                });

            modelBuilder.Entity("ProductCatalog.Shared.Review", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<string>("ReviewText")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.ToTable("Reviews");
                });

            modelBuilder.Entity("ProductCatalog.Shared.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<byte[]>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("PasswordSalt")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("ProductCatalog.Shared.Picture", b =>
                {
                    b.HasOne("ProductCatalog.Shared.Product", "Product")
                        .WithMany("Pictures")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");
                });

            modelBuilder.Entity("ProductCatalog.Shared.ProductAttributeMapping", b =>
                {
                    b.HasOne("ProductCatalog.Shared.ProductAttribute", "productAttribute")
                        .WithMany("productAttributeMapping")
                        .HasForeignKey("AttributeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProductCatalog.Shared.Product", "Product")
                        .WithMany("productAttributeMapping")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");

                    b.Navigation("productAttribute");
                });

            modelBuilder.Entity("ProductCatalog.Shared.ProductCategoryMapping", b =>
                {
                    b.HasOne("ProductCatalog.Shared.Category", "Category")
                        .WithMany("productCategoryMapping")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProductCatalog.Shared.Product", "Product")
                        .WithMany("productCategoryMapping")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("ProductCatalog.Shared.Review", b =>
                {
                    b.HasOne("ProductCatalog.Shared.Product", "Product")
                        .WithMany("Reviews")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");
                });

            modelBuilder.Entity("ProductCatalog.Shared.Category", b =>
                {
                    b.Navigation("productCategoryMapping");
                });

            modelBuilder.Entity("ProductCatalog.Shared.Product", b =>
                {
                    b.Navigation("Pictures");

                    b.Navigation("Reviews");

                    b.Navigation("productAttributeMapping");

                    b.Navigation("productCategoryMapping");
                });

            modelBuilder.Entity("ProductCatalog.Shared.ProductAttribute", b =>
                {
                    b.Navigation("productAttributeMapping");
                });
#pragma warning restore 612, 618
        }
    }
}
